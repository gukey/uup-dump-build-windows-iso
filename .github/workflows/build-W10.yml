name: build-w10-22h2
run-name: Build Windows 11 24H2 ${{ inputs.edition }} ${{ inputs.language }}

on:
  workflow_dispatch:
    inputs:
      edition:
        description: "Windows edition to build"
        type: choice
        options:
        - Pro
        - Home
        - Multi
        default: Pro
        required: true
      language:
        description: "Language to add"
        type: choice
        options:
        - ar-sa
        - bg-bg
        - cs-cz
        - da-dk
        - de-de
        - el-gr
        - en-gb
        - en-us
        - es-es
        - es-mx
        - et-ee
        - fi-fi
        - fr-ca
        - fr-fr
        - he-il
        - hr-hr
        - hu-hu
        - it-it
        - ja-jp
        - ko-kr
        - lt-lt
        - lv-lv
        - nb-no
        - nl-nl
        - pl-pl
        - pt-br
        - pt-pt
        - ro-ro
        - ru-ru
        - sk-sk
        - sl-si
        - sr-latn-rs
        - sv-se
        - th-th
        - tr-tr
        - uk-ua
        - zh-cn
        - zh-tw
        default: zh-cn
        required: true
      esd:
        description: "Use ESD compression"
        type: boolean
        required: true
        default: true
      drivers:
        description: "Add additional drivers"
        type: boolean
        required: true
        default: true
      netfx3:
        description: "Add .NET Framework 3.5"
        type: boolean
        required: true
        default: true
  schedule:
    - cron: '0 19 * * *'  # 北京时间凌晨3点（UTC时间19点）

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show available disk space before build
        run: |
          Get-PSDrive -PSProvider FileSystem
          echo "options=" >> $env:GITHUB_ENV

      - name: Enable ESD
        if: ${{ inputs.esd }}
        run: echo "options=${{ env.options }} -esd" >> $env:GITHUB_ENV

      - name: Enable additional drivers
        if: ${{ inputs.drivers }}
        run: echo "options=${{ env.options }} -drivers" >> $env:GITHUB_ENV

      - name: Enable .NET Framework 3.5
        if: ${{ inputs.netfx3 }}
        run: echo "options=${{ env.options }} -netfx3" >> $env:GITHUB_ENV

      - name: Build Windows 11 24H2
        run: pwsh uup-dump-get-windows-iso.ps1 windows-11 c:/output -edition ${{ inputs.edition }} -lang ${{ inputs.language }} ${{ env.options }}

      - name: Show available disk space after build
        run: Get-PSDrive -PSProvider FileSystem

      - name: Upload artifact
        id: upload_artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ISO_NAME }}
          path: c:/output/*.ISO
          if-no-files-found: error 
      
      - name: Set artifact_url
        id: set_artifact_url
        run: echo "artifact_url=${{ steps.upload_artifact.outputs.artifact-url }}" >> $env:GITHUB_ENV
        
      - name: Build summary
        id: build_summary
        run: |
          $iso = Get-Content (Resolve-Path c:/output/*.json) | ConvertFrom-Json
          $imageNames = $iso.images | ForEach-Object { $_.name }
          if ($imageNames.Count -gt 1) {
            if ($imageNames[0] -match '^(Windows (10|11))\s*(.*)') {
              $prefix = $matches[1]
              $first = $imageNames[0]
              $rest = $imageNames[1..($imageNames.Count - 1)] | ForEach-Object { ($_ -replace "^$prefix\s*", '') }
              $finalImageName = $first + '/' + ($rest -join '/')
            } else {
              $finalImageName = $imageNames -join '/'
            }
          } elseif ($imageNames.Count -eq 1) {
            $finalImageName = $imageNames[0]
          } else {
            $finalImageName = ''
          }

          Add-Content $env:GITHUB_STEP_SUMMARY @"
          | Property | Value |
          | :--- | :--- |
          | Name | $($finalImageName) ${{ env.version }} |
          | Build | $($iso.build) |
          | Checksum | $($iso.checksum) |
          | Image Name | $finalImageName |
          | Iso | [$env:ISO_NAME]($env:artifact_url) |
          | UUP dump | [$($iso.title)]($($iso.uupDump.downloadUrl)) |
          "@
          (Get-Content $env:GITHUB_STEP_SUMMARY) | Set-Content summary.md
          echo "build=$($iso.build)" >> $env:GITHUB_ENV
          echo "version=$($iso.version)" >> $env:GITHUB_ENV
          echo "name=$($iso.name)" >> $env:GITHUB_ENV
          echo "title=$($iso.title)" >> $env:GITHUB_ENV
          echo "images=$($finalImageName)" >> $env:GITHUB_ENV
          echo "RUN_NAME=$($finalImageName) $($iso.version) ($($iso.build))" >> $GITHUB_ENV
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2.3.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ env.build }}"
          name: "${{ env.images }} ${{ env.version }} (${{ env.build }})"
          body_path: summary.md
          draft: false
          prerelease: false
