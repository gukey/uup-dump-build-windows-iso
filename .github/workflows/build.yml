name: build

on:
  workflow_dispatch:
  #schedule:
    #- cron: '0 * * * *' # hourly.
    #- cron: '0 0 17 * *' # every month, the 17th day.

jobs:
  build:
    strategy:
      matrix:
        include:
          - name: windows-10
          - name: windows-11
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Log the available disk space, so we can inspect it later.
      # NB GitHub-hosted runners have limited available disk space.
      #    see https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
      - name: Show available disk space before build
        run: Get-PSDrive -PSProvider FileSystem

      # NB we are writing outside of the current working/job directory
      #    because it does not have sufficient available disk space.
      - name: Build
        run: pwsh uup-dump-get-windows-iso.ps1 ${{ matrix.name }} c:/output

      - name: Show available disk space after build
        run: Get-PSDrive -PSProvider FileSystem

      - name: Build summary
        run: |
          $iso = Get-Content (Resolve-Path c:/output/*.json) | ConvertFrom-Json
          Add-Content $env:GITHUB_STEP_SUMMARY @"
          | Property | Value |
          | :--- | :--- |
          | Name | $($iso.name) |
          | Build | $($iso.build) |
          | Checksum | $($iso.checksum) |
          $($iso.images | ForEach-Object {"| Image Name #$($_.index) | $($_.name) |"})
          | UUP dump | [$($iso.title)]($($iso.uupDump.downloadUrl)) |
          "@

      - name: Install gh CLI
        run: |
          choco install gh -y
        shell: cmd

      - name: Split ISO into chunks
        shell: pwsh
        run: |
          $isoFile = Get-ChildItem -Path c:/output -Filter *.iso | Select-Object -First 1
          $chunkSizeBytes = 1932735283  # 1.8 GiB in bytes
          $isoFilePath = $isoFile.FullName.Replace("\", "/")
          bash -c "split -b $chunkSizeBytes -d -a 3 /$isoFilePath /$isoFilePath.part"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload split files to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          release_id=$(jq -r '.id' <<< "${{ steps.create_release.outputs.release_id }}")
          for file in c:/output/*.part*; do
            gh release upload $release_id $file
          done

      - name: Upload metadata artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-metadata
          path: |
            c:/output/*.json
            c:/output/*.iso.sha256.txt
