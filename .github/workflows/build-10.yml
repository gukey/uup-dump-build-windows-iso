name: build
run-name: "Build Windows 11 24H2 + Windows 10 22H2"

on:
  workflow_dispatch: {}  # 空配置表示手动触发但不提供选项
  schedule:
    # 每周一凌晨3点自动构建 (UTC时间)
    - cron: '0 3 * * 1'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-windows:
    runs-on: windows-2022
    strategy:
      matrix:
        version: ['Windows-11-24H2', 'Windows-10-22H2']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 显示磁盘空间
      - name: Show available disk space before build (${{ matrix.version }})
        run: Get-PSDrive -PSProvider FileSystem

      # 构建指定版本
      - name: Build ${{ matrix.version }}
        run: |
          $outputDir = "c:/output/${{ matrix.version }}"
          New-Item -ItemType Directory -Path $outputDir -Force
          switch("${{ matrix.version }}") {
            "Windows-11-24H2"  { pwsh uup-dump-get-windows-iso.ps1 windows-11 $outputDir }
            "Windows-10-22H2"  { pwsh uup-dump-get-windows-iso.ps1 windows-10 $outputDir }
          }

      # 显示构建后磁盘空间
      - name: Show available disk space after build (${{ matrix.version }})
        run: Get-PSDrive -PSProvider FileSystem

  upload-and-release:
    runs-on: windows-2022
    needs: build-windows
    steps:
      # 创建包含所有ISO的artifact
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-isos
          path: c:/output/​**​/*.iso
          retention-days: 3  # 临时保留3天
          if-no-files-found: error

      # 生成发布报告
      - name: Generate release summary
        run: |
          $summaryFile = "summary.md"
          $summaryContent = "# Windows ISO Build Report\n\n"
          
          # 处理每个版本
          foreach ($dir in (Get-ChildItem -Directory c:/output)) {
            $jsonFile = (Get-ChildItem $dir.FullName -Filter *.json | Select-Object -First 1)
            if (!$jsonFile) { continue }
            
            $iso = Get-Content $jsonFile.FullName | ConvertFrom-Json
            $isoFile = (Get-ChildItem $dir.FullName -Filter *.iso | Select-Object -First 1).FullName
            $checksum = (Get-FileHash $isoFile -Algorithm SHA256).Hash
            
            $summaryContent += @"
            ## $($dir.Name)
            | Property | Value |
            |----------|-------|
            | ISO Name | $($iso.Name) |
            | Build | $($iso.Build) |
            | Architecture | $($iso.Architecture) |
            | File Size | $([math]::Round((Get-Item $isoFile).Length/1GB,2)) GB |
            | SHA256 | $checksum |
            | UUP Dump | [View Details]($($iso.uupDump.downloadUrl)) |
            
            "\n\n"
          }
          
          Set-Content $summaryFile -Value $summaryContent
          Write-Host "Generated release summary"

      # 创建GitHub Release
      - name: Create Release
        uses: softprops/action-gh-release@v2.3.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "build-${{ github.run_id }}"
          name: "Windows ISOs - ${{ github.run_number }}"
          body_path: summary.md
          files: |
            c:/output/​**​/*.iso
          draft: false
          prerelease: false
